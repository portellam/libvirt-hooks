#!/usr/bin/env bash

#
# Filename:       /etc/libvirt/hooks/ddcutil
# Description:    Automatically switch monitor inputs when starting/stopping a libvirt domain.
# URL(s):         https://github.com/PassthroughPOST/VFIO-Tools
# Author(s):      Sebastiaan <github.com/SharkWipf>
# Maintainer(s):  Alex Portell <github.com/portellam>
#

# <remarks>
# This hook allows automatically switch monitor inputs when starting/stopping a VM.
# This file depends on the Passthrough POST hook helper script found in this repo.
# Place this script in BOTH these directories (or symlink it):
#
# Set the files as executable through `chmod +x` and configure your inputs.
# You also need `ddcutil` and a ddcutil-compatible monitor.
#
# Make sure you specify the right settings for your setup below or it won't work.
# </remarks>

HOOK_NAME="ddcutil"
PREFIX_ERROR="An error occurred:"
PREFIX_PROMPT="libvirt-qemu ${HOOK_NAME}:"
OPERATION="${2}"
SUBOPERATION="${3}"

# <remarks>The display shown in `ddcutil detect`</remarks>
DOMAIN_DISPLAY="0"

# <remarks>Video input values (without 0x, but with leading zeroes, if any. See `ddcutil capabilities`)</remarks>
DOMAIN_VIDEO_INPUT="12"
HOST_VIDEO_INPUT="0f"
VIDEO_INPUT=""

function get_video_input
{
	case "${OPERATION}/${SUBOPERATION}" in
		"started/begin" )
			VIDEO_INPUT="${DOMAIN_VIDEO_INPUT}"
			return 0 ;;

		"stopped/end" )
			VIDEO_INPUT="${HOST_VIDEO_INPUT}"
			return 0 ;;
	esac

	return 1
}

function set_video_input
{
  if [[ "$( ddcutil -d "${DOMAIN_DISPLAY}" getvcp 60 --terse | awk '{print ${4}}' )" == "x${VIDEO_INPUT}" ]]; then
    return 0
  fi

	if ! ddcutil -d "${DOMAIN_DISPLAY}" setvcp 60 "0x${VIDEO_INPUT}"; then
    echo "${PREFIX_PROMPT} ${PREFIX_ERROR} Failed to switch video input."
		return 1
	fi
}

get_video_input && set_video_input