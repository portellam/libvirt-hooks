#!/usr/bin/env bash

#
# Filename:       /usr/local/bin/libvirt-dosleep
# Description:    Try to suspend Libvirt domain before Host sleep.
# Author(s):      Alex Portell <github.com/portellam>
# Maintainer(s):  Alex Portell <github.com/portellam>
#

# <params>
  DOMAIN_NAME="${1}"
  HOOK_NAME="dosleep"
  PREFIX_ERROR="An error occurred:"
  PREFIX_PROMPT="libvirt-qemu ${HOOK_NAME}:"
# </params>

# <functions>
  function main
  {
    is_domain_suspended_or_offline && return 0
    hibernate_domain || hybrid_sleep_domain || sleep_domain || return 1

    if ! sleep_for_one_cycle \
      || ! is_domain_suspended_or_offline; then
      return 1
    fi
  }

  function print_prompt_to_log
  {
    echo -e "${PREFIX_PROMPT} ${1}" >&1
  }

  function print_error_to_log
  {
    echo -e "${PREFIX_PROMPT} ${PREFIX_ERROR} ${1}" >&2
  }

  function hibernate_domain
  {
    if ! virsh dompmsuspend --target disk "${DOMAIN_NAME}"; then
      print_error_to_log "Failed to hibernate Libvirt domain '${DOMAIN_NAME}'."
      return 1
    fi

    print_prompt_to_log "Hibernating Libvirt domain '${DOMAIN_NAME}'."
  }

  function hybrid_sleep_domain
  {
    if ! virsh dompmsuspend --target both "${DOMAIN_NAME}"; then
      print_error_to_log "Failed to hybrid-sleep Libvirt domain '${DOMAIN_NAME}'."
      return 1
    fi

    print_prompt_to_log "Hybrid-sleeping Libvirt domain '${DOMAIN_NAME}'."
  }

  function sleep_domain
  {
    if ! virsh dompmsuspend --target both "${DOMAIN_NAME}"; then
      print_error_to_log "Failed to sleep Libvirt domain '${DOMAIN_NAME}'."
      return 1
    fi

    print_prompt_to_log "Sleeping Libvirt domain '${DOMAIN_NAME}'."
  }

  function is_domain_suspended_or_offline
  {
    local -r domain_state="$( virsh domstate ${DOMAIN_NAME} | tr -d '\n' )"

    if [[ "${domain_state}" != *"pmsuspended"* ]] \
      && [[ "${domain_state}" != *"shut off"* ]]; then
      print_error_to_log "Libvirt domain '${DOMAIN_NAME}' is online."
      return 1
    fi

    print_prompt_to_log "Libvirt domain '${DOMAIN_NAME}' is offline."
  }

  function sleep_for_one_cycle
  {
    sleep 1
  }
# </functions>

# <code>
  main
# </code>